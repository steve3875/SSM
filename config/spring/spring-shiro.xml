<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd  ">
	<!--web.xml对应的shirobean的配置 -->
	<!--过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!--loginurl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将会由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" />
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
		<!-- <property name="successUrl" value="/first.action" /> -->
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!--过滤器链定义，从上向下执行，一般将/**放在最下面 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/image/** = anon
				/js/** = anon
				/styles/** = anon
				/loginIndex.action=anon
				/logout.action =logout
				<!--商品查询权限,拦截时候设置则会拦截，不设置就不会拦截 -->
				<!-- /item/queryItems.action=perms[item:query] /item/managerItem.action=perms[item:manager] -->
				/** = authc
				<!-- /** = authc 所有url都必须认证通过才可以访问 -->
				<!-- /** = anon所有url都可以匿名访问 -->
			</value>
		</property>
	</bean>
	<!--securitymanager配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--自定义realm -->
		<property name="realm" ref="customRealm"></property>
		<!--缓存管理器注入属性  -->
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>
	<!--session管理器-->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!--session的失效时长，单位是毫秒  -->
		<property name="globalSessionTimeout" value="#{1 * 5 * 1000}"></property>
		<!--删除失效的session  -->
		<property name="deleteInvalidSessions" value="true"></property>
	</bean>
	<!--缓存管理器  -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"></property>
	</bean>
	<!--定义凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"></property>
		<property name="hashIterations" value="1"></property>
	</bean>
	<!--自定义的realm -->
	<bean id="customRealm" class="com.qit.shiro.CustomRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		
	</bean>
	<!--自定义表单验证  -->
	<bean id="cunstomFormAuthenticationFilter" class="com.qit.shiro.CustomFormAuthenticationFilter">
		<property name="usernameParam" value="username"></property>
		<property name="passwordParam" value="password"></property>
	</bean>
	<!--开启shiro的注解支持 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
</beans>